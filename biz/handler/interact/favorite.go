// Code generated by hertz generator.

package interact

import (
	"context"

	"douyin_backend/biz/hertz_gen/model/interact"
	"douyin_backend/biz/service"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// FavoriteAction .
// @router /douyin/favorite/action/ [POST]
func FavoriteAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req interact.FavoriteActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(interact.FavoriteActionResponse)
	responseFail := func(code int, msg string) {
		resp.StatusCode, resp.StatusMsg = -1, &msg
		c.JSON(consts.StatusOK, resp)
	}

	userId := c.GetInt64("uid")
	if err != nil {
		responseFail(-1, "internal error: Unable to parse user id")
		return
	}

	if req.ActionType < 1 || req.ActionType > 2 {
		responseFail(-1, "invalid action type")
		return
	}

	service := new(service.FavoriteService)

	if req.ActionType == 1 { // add comment
		err := service.AddFavorite(userId, req.VideoID)
		if err != nil {
			responseFail(-1, "internal error: Unable to add")
			return
		}
	} else { // delete comment
		err := service.RemoveFavorite(userId, req.VideoID)
		if err != nil {
			responseFail(-1, "internal error: Unable to delete")
			return
		}
	}

	resp.StatusCode = 0

	c.JSON(consts.StatusOK, resp)
}

// FavoriteList .
// @router /douyin/favorite/list/ [GET]
func FavoriteList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req interact.FavoriteListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(interact.FavoriteListResponse)

	service := new(service.FavoriteService)

	list, err := service.GetFavoriteList(req.UserID)
	if err != nil {
		msg := err.Error()
		resp.StatusCode, resp.StatusMsg = -1, &msg
		c.JSON(consts.StatusOK, resp)
		return
	}

	resp.StatusCode = 0
	resp.VideoList = list
	

	c.JSON(consts.StatusOK, resp)
}
